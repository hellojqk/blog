apiVersion: v1
kind: Service
metadata:
  name: redis-srv-s
  namespace: demo
  labels:
    environment: test
    app: redis
spec:
  selector:
    app: redis-stateful
  ports:
  - port: 6379
    targetPort: 6379

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-stateful
  namespace: demo
  labels:
    environment: test
    app: redis
spec:
  serviceName: redis-stateful-sn
  selector:
    matchLabels:
      app: redis-stateful
  template:
    metadata:
      labels:
        app: redis-stateful
    spec:
      containers:
        - name: redis
          image: redis
          resources:
            limits:
              memory: "256Mi"
              cpu: "0.2"
            requests:
              memory: "128Mi"
              cpu: "0.1"
          ports:
            - containerPort: 6379
  replicas: 1
  updateStrategy:
    type: RollingUpdate

---
apiVersion: v1
kind: Service
metadata:
  name: redis-srv-d
  namespace: demo
  labels:
    environment: test
    app: redis
spec:
  selector:
    app: redis-deployment
  ports:
  - port: 6379
    targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: demo
  labels:
    environment: test
    app: redis
spec:
  selector:
    matchLabels:
      app: redis-deployment
  template:
    metadata:
      labels:
        app: redis-deployment
    spec:
      containers:
      - name: redis-deployment
        image: redis
        resources:
          limits:
            memory: "256Mi"
            cpu: "0.2"
          requests:
            memory: "128Mi"
            cpu: "0.1"
        ports:
        - containerPort: 6379
      restartPolicy: Always
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
      
